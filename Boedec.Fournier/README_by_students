HOW TO LAUNCH THE PROJECT :
  - Run the project.
  - Give a port number (>= 2005) to the opened console.

HOW TO RUN TEST (3 peers) :
  - Run the project 3 times (i.e. in 3 different consoles).
  - In each console type the number of ports in this order : 2005, 2006, 2007.
  - As soon as a peer is connected with other peer(s) it sends 3 numbers ([0,1,2] for 2005, [8,9,10] for 2006 and [16,17,18] for 2007) in an forever loop.

OVERVIEW OF THE MAIN JAVA CLASSES :
	- BroadcastThread :
		- Every peer starts this thread once they are connected to the group
		- It sends data to every other peers in the group. The data is peer-specific, thus it is easily recognizable during tests. 
		- For now we slowed down the frequency at which data is sent, so that we can verify the correct deliver order more easily. 
	
  - Main :
    - Waits for a port number
    - Creates a NioEngine object
    - Launches the "listen" method of the NioEngine object
    - Launches the "connect" method of the NioEnfine object on the other connected peers
    - Launches the mainloop of the NioEngine object
    
  - Message :
    - Two types of message : ACK or data.
    - We will create more types of message when we will implement a more 'in-depth' dynamic group system.
    	-> 'hello' type message will carry a peer request to join a group.
    	-> another type will carry the response which will contain the addresses of all group members
    - When a peer receives ACK's for a message, it increments a counter that is located inside its local copy of the message.
    - To prevent conflicts with equal timestamps, the message records the listening port of the message author.

  - NioEngine :
    - Connects with someone else and listens to any connection.
    - Forever loops a Selector object to manage the connections, deliverings, ...